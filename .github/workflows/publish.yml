name: Publish to Maven Central

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo ${{ steps.get_version.outputs.version }}

      - run: echo ${{ steps.get_version.outputs.version-without-v }}

        

# on:
#   push:
#     tags:
#       - '*'
# jobs:
#   publish:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Java for publishing to Maven Central Repository
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.8
#           server-id: ossrh
#           server-username: MAVEN_USERNAME
#           server-password: MAVEN_PASSWORD
#           gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
#           gpg-passphrase: MAVEN_GPG_PASSPHRASE
#       - name: build artifact
#         run: mvn clean package
#       - name: Create release
#         uses: ncipollo/release-action@v1
#         with:
#           allowUpdates: true
#           artifacts: "${{ github.workspace }}/target/*.jar"
#           token: ${{ secrets.GITHUB_TOKEN }}
#       - name: Publish to the Maven Central Repository
#         run: |
#           mvn \
#             --no-transfer-progress \
#             --batch-mode \
#             deploy
#         env:
#           MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#           MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          
#           OSSRH_USERNAME : the username for the sonatype Jira login

# OSSRH_PASSWORD: the password for the sonatype Jira login
# OSSRH_GPG_SECRET_KEY: gpg private key ( gpg --armor --export-secret-keys YOUR_KEY_ID )
# OSSRH_GPG_SECRET_KEY_PASSWORD : gpg passphrase
